/**
 * Words.
 * 
 * The text() function is used for writing words to the screen.
 */

import android.graphics.Typeface;


int x = 30;
PFont fontA, fontB;

PrintWriter log1;
  boolean logging=true;
  
PApplet me=this;
  
void logprintln(String s){
  if(!logging) return;
  log1.println(s);
  log1.flush();
}
  
@Override
  public PFont createFont(String name, float size) {

  Typeface baseFont = Typeface.createFromFile(name);

  return new PFont(baseFont, round(size), true, null);
}

Ttf.Glyph gl;
Ttf fontT;

void setucccp() 
{
  fullScreen(P3D);//  size(200, 200);
  background(102);
  log1=createWriter("/storage/emulated/0/cliptest/ttf.log");
  // Load the font. Fonts must be placed within the data 
  // directory of your sketch. Use Tools > Create Font 
  // to create a distributable bitmap font. 
  // For vector fonts, use the createFont() function. 
  fontA = loadFont("/storage/emulated/0/A10/Ziggurat-HTF-Black-32.vlw");
  fontB=createFont("/storage/emulated/0/A10/Arkhip_font.ttf", 
    32);
 // Ttfme=this;
  fontT=new Ttf("/storage/emulated/0/A10/"+
  //fontT.me=this;
    "linear-b.ttf"
   // "Arkhip_font.ttf"
   // "font.ttf"
   // "Cousine-Regular.ttf"
  //  "MesloLGS-Regular.ttf"
   // "FontAwesome.ttf"
    );
  for (int i=0; i<fontT.length; i++) {
    // println(fontT.getGlyphOffset(i));
  }
  
 // for(int i=0;i<fontT.length  ;i++)
  // gl= fontT.getGlyph(i);



  textFont(fontA);
  textSize(64);
  frameRate(4);
}

void drafffw() {
  // Use fill() to change the value or color of the text
  //scale(1.0,1.0,1.0);
  background(123);
  pushMatrix();
  translate(100,1000);
  stroke(0);fill(83);//scale();
  //noFill();
  strokeWeight(14);
 gl=fontT.getGlyph(frameCount%(fontT.length));
  gl.draw();
  translate(0,400);
  strokeWeight(80);
  fontT.textSize(300);
  fontT.draw("â‚¬!i.M1234");
  popMatrix();
  textFont(fontA);
  textSize(100);
  //scale(2.1);
  fill(0);
  text("icDhi", x, 60);
  fill(51);
  text("ni", x, 95);
  fill(204);
  text("san", x, 130);
  fill(255);
  text("shi", x, 165);
  fill(0);
  int st=60;
  g.flush(); // grr....stupid processing
  textFont(fontB);
  fill(#780808);
  for (int i=24; i<115; i+=5) {
    textSize(i);
    text(""+i+"px", 240, st);
    st+=10+i;
  }
  //noLoop();
  logging=false;
}

